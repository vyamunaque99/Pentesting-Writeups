from itertools import cycle
from binascii import hexlify
import os

length=3

possible_headers   =[0xffd8ffdb,0xffd8ffe000104a4649460001,0xffd8ffee]
encrypted_headers  =[0xb9140645,0xb914064571e0b5f73707cb85,0xb9140645]

possible_keys=[]

def xor_file(key, message):
    message = message.replace(' ', '').decode('hex')
    key = ''.join(key.split()[::-1]).decode('hex')

    return ''.join([chr(ord(a) ^ ord(b)) for a,b in zip(message, cycle(key))])

for i in range(length):
    #Convierte a string hexadecimal removiendo el valor '0x' inicial y los identificadores long
    possible_keys.append("%x" % (encrypted_headers[i]^possible_headers[i]))

print(possible_keys)

with open('my_magic_bytes.jpg.enc','rb') as var:
    image=hexlify(var.read())
var.close()

for i in range(length):
    result=xor_file(possible_keys[i],image)
    output=open(('file'+str(i)+'.jpg'),'wb')
    output.write(result)
    output.close()